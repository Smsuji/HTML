developer.mozilla.org->to learn javascript well(one of the best site). 

Javascript: Java and javascript is entirely different
Javascript is named as ECMAScript earlier
It is a scripting language.
Scripting language has interpreter(line by line translation) only
All major web browsers have a dedicated javascript engine to execute the code on users devices.
Javascript OOP language--> yes
only OOP language --> no.
Javascript has 5 datatype.
Usage of javascript-> action
<script> tag->we can give in head as well as body. Giving in head tag is advisable.
To denote string- use " " or ' '.
var- means variable.(also called as identifier or reference variable)
It is not necessary to explicitly define var.
There is no semicolon in javascript syntax
=  -> assignment 
==  -> comparator
// for comment

5 primitive(or basic) datatypes in javascript:
1)Number (operations like + - * / % **)
2)String (sequence of characters)
3)boolean (yes or no)


var name = 'suji'
var age = 25
var indian = true

typeof name-->string
typeof age-->number
typeof indian-->boolean


Methods: Set of instructions for performing a specific task.
prompt()
alert()
console.log()


ctrl+shift+i ->browser console
ctrl+shift+j ->available in developer tool

Basic program:

index.html
----------
<html>
  <head>
    <script type="text/javascript" src="demo.js"></script>
  </head>
  <body>
    
  </body>
</html>

demo.js:
-------
var name=prompt("Enter your name")
var age=prompt("Enter your age")
agedays = age * 365.25
alert('Hi ' + name + ' You have been in this world for ' + agedays+ ' Enjoy Happy Days ')

Javascript has 3 statements:

>Normal statement -> var name = 'suji'

>Conditional statement -> boolean true / false
For example demo.js:
-------------------
var age = prompt("enter your age")
if(age >= 60)
 {
    console.log("First priority")
     alert("First")
 }
else if(age >= 40)
{
   console.log("Second priority")
    alert("Second")
}
else
{
    console.log("Third priority")
    alert("Third")
}

>Control flow / Iterative statements (To reduce the length of the code)

while loop:
-----------

var count = 1
 while(count <= 6)
 {
     console.log("Hello")
     count++
 }
----------------------------

var name = prompt("Enter your name")
console.log(name.length)
i=0
while(i<name.length)
{
console.log(name[i])
i++
}
--------------------------------------
100 divided by which nos

number = 100
divisor =2 
while(divisor <= number)
{
    if(number % divisor == 0)
       {
        console.log(divisor)
       }
     divisor++;
}
-------------------------------------------

Divisible by 2

number = prompt("Enter the number")
divisor = 1 
while(divisor <= number)
{
    if(divisor % 2 == 0)
       {
        console.log(divisor)
       }
    divisor++
}

------------------------------------------------

Divisible by 3

number = prompt("Enter the number")
divisor = 1 
while(divisor <= number)
{
    if(divisor % 3 == 0)
       {
        console.log(divisor)
       }
    divisor++
}
------------------------------------------------------

Divisible by 2 and 3

number = prompt("Enter the number")
divisor = 1 
while(divisor <= number)
{
    if(divisor % 2 == 0 & divisor % 3 == 0)
       {
        console.log(divisor)
       }
    divisor++
}

----------------------------------------------------------

Divisible by 2 or 3

number = prompt("Enter the number")
divisor = 1 
while(divisor <= number)
{
    if(divisor % 2 == 0 | divisor % 3 == 0)
       {
        console.log(divisor)
       }
    divisor++
}

-----------------------------------------------------------

Prime no

number = prompt("Enter the number")
i = 2
count = 0
while(number >= i)
{
    if(number % i == 0)
        count++;
        i++;
}

    if(count==1)
        console.log(number + " is prime")
    else
        console.log(number + " is not prime")  

-----------------------------------------------------------------

Javascript looping:
-------------------

This is the example program for Getting input from the user during the runtime

var name = prompt("who is your favourite actor")
while(name!=="vijay")
{
name=prompt("Who is your favourite actor")
}
alert("Ok, you are actor vijay fan")

-------------------------------------------------------------------------

Nested if:
---------

var name = prompt("1. Belongs to TamilNadu")
if(name=="Abdul kalam")
{
alert("Congrats! You are right")
}
    else
    {

    alert("Sorry, Incorrect guess")
    name = prompt("2.He is no more")
    if(name == "Abdul kalam")
    {
        alert("Congrats! you are right")
    }
    else
    {
        alert("Sorry, Incorrect guess")
        name = prompt("3.Different hairstyle")        

-------------------------------------------------------------------------------

for loop:
--------

for(var no=1;no<=10;no++)
{
    console.log(no)
}

------------------------------------------------------------------------------

To learn looping:

1)Prime no
2)Factorial
3)Fibonacci series

----------------------------------------------------------------------------

Functions:

Code reusability
Set of instructions to perform a specific task.

function wish(name)
{
console.log(name + "All the best")
}
name=prompt("Tell me your name")
wish(name) //Function Calling Statement

or 

function multiply(no1,no2)
{
return no1 * no2
}

var result = multiply(10,20)
console.log(result)

or

function calculate(tamil_mark, eng_mark) //Argument passing
{
return tamil_mark + eng_mark
}

var tamil = Number(prompt("Enter Tamil Mark"))
var english = Number(prompt("Enter English Mark"))

var result = calculate(tamil, english)
console.log("Your total is" + result)

----------------------------------------------------------------------------
Global and local scope

var salary = 25000  //global scope
function buy_veg()
{
amount = 200        //local scope
console.log("buying vegetable")
console.log("Inside buy veg" + salary)
}

buy_veg()
console.log(salary)

---------------------------------------------------------------------------

Array: grouping / team
Array is collection of elements
dynamic memory -> allocate memory based on the object(there is no fixed memory).

var actors = ["vijay", true, 67.9, "kamal"]
console.log(actors[0])
console.log(actors[1])
console.log(actors[2])
console.log(actors[3])

Array related functions:

push() -> actors.push("sethu") -> The push() method adds one or more elements to the end of an array   and returns the new length of the array

pop() -> The pop() method removes the last element from an array and returns that element. This method changes the length of the array.

shift() -> The shift() method removes the first element from an array and returns that removed element. This method changes the length of the array.

unshift()-> The unshift() method adds one or more elements to the beginning of an array and returns the new length of the array

indexOf() -> The indexOf() method returns the position of the first occurrence of a value in a string. The indexOf() method returns -1 if the value is not found.

slice() -> The slice() method returns selected elements in an array, as a new array. The slice() method selects from a given start, up to a (not inclusive) given end. The slice() method does not change the original array.

------------------------------------------------------------------------------
Document Object Model: 
<!DOCTYPE html>

Dynamically access and Update the Content, Structure and Style of a Document.  

What is Object: 

DOM Structure: 

<p id="name"> Mathi </p> 

document.getElementById("name").innerHTML

Inner HTML என்பது இங்கே Mathi எனக் கொடுக்கும்.

inputஐ எப்படி எடுப்பது?

<input id="username"> </input> 
பயனர் கொடுக்கும் உள்ளீட்டை(input) எடுப்பதற்கு value பயன்படும். 

document.getElementById("name").value


Move Data into InnerHTML: 
submit பொத்தானைச் சொடுக்கும் போது 

index2.html
-----------

<!DOCTYPE html>
<html>
	<head> 
		<script type="text/javascript" src="demo.js"> </script>
<style>
input{width:40%;height:50px;}
h2, p
{
color:blue;
}
button
{
width:40%; 
height:50px; 
background-color: black; 
color: yellow; 
}
</style>
</head>	 
<body>
<h2> Select By ID எடுத்துக்காட்டு</h2>
<input id="fromCity" placeHolder="Enter City Name"> <br>
<button> Submit </button>
<p id="toCity"> </p>
</body>
</html>

demo.js
-------
alert("Hi JS")

submit பொத்தானைச் சொடுக்கும் போது  உள்ளீடாகக் கொடுக்கப்பட்ட ஊரின் பெயரை எடுக்க வேண்டும்.  அதற்குப் பயன்படும் event - onclick

<button onclick="getCityName()"> Submit </button>

இப்போது getCityName() என்னும் பெயரில் ஒரு function நமக்கு வேண்டும் அல்லவா> 

<p> </p> க்குக் கீழ்: 
<script>
	function getCityName()
	{
	cityName = document.getElementById("fromCity").value;
	
	}

</script> 

இப்போது boxஇல் இருக்கும் மதிப்பை எடுக்க, அதற்கு அடுத்த வரியில். 

document.getElementById("toCity").innerHTML=cityName; சேர்க்க. 

	function getCityName()
	{
	cityName = document.getElementById("fromCity").value;
	document.getElementById("toCity").innerHTML=cityName;
	}


இப்போது இந்த function ஐ அப்படியே வெட்டி எடுத்து demo.jsஇல் வைத்துக் கொள்ளலா
கொள்ளலாம். <script> </script> இரண்டையும் நீக்கி விடலாம். 

--------------

DOM - Select By Tag Name: 

<!DOCTYPE html>
<html>
	<head> 
		<script type="text/javascript" src="demo.js"> </script>
<style>
input{width:40%;height:50px;}
h2, p
{
color:blue;
}
button
{
width:40%; 
height:50px; 
background-color: black; 
color: yellow; 
}
</style>
</head>	 
<body>
<h2> Select By Tag Name எடுத்துக்காட்டு</h2>
<input placeHolder="Enter City Name"> இல் இருந்து<br>
<input placeHolder="Enter City Name"> வரை<br>
<input placeHolder="Enter City Name"> இடைத்தங்கல்<br>
<button onclick="getCityName()"> Submit </button>
<p> </p>
<p> </p>
<p> </p>
	<script>
		function getCityName()
	{
	cityNamesInput = document.getElementsByTagName("input")
	cityNamesOutput = document.getElementsByTagName("p")
	cityNamesOutput[0].innerHTML =cityNamesInput[0].value
	cityNamesOutput[1].innerHTML =cityNamesInput[1].value
	cityNamesOutput[2].innerHTML =cityNamesInput[2].value
	}
		
	</script>
</body>
</html>

மேல் உள்ளதைக் கையாளத் தான் for loop.  
for(int i=0; i<cityNamesInput.length;i++)
{
cityNamesOutput[i].innerHTML =cityNamesInput[i].value
}


Select By Tag Name By ID:
tag வைத்து எடுக்கும் போது எல்லா inputஉம் வர வாய்ப்பு உள்ளதே!  அதை எப்படிக் கையாள்வது?
அதற்குத் தான் div id பயன்படுத்தப் போகிறோம்.  

கீழ் உள்ளதைச் செயல்படுத்தி அதில் உள்ள சிக்கலைக் கவனியுங்கள்.  

<!DOCTYPE html>
<html>
	<head> 
		<script type="text/javascript" src="demo.js"> </script>
<style>
input{width:40%;height:50px;}
h2, p
{
color:blue;
}
button
{
width:40%; 
height:50px; 
background-color: black; 
color: yellow; 
}
</style>
</head>	 
<body>
<h2> Select By Tag Name By ID எடுத்துக்காட்டு</h2>
<input placeHolder="Enter City Name"> இல் இருந்து<br>

<div id = "cities">
<input placeHolder="Enter City Name"> இல் இருந்து<br>
<input placeHolder="Enter City Name"> வரை<br>
<input placeHolder="Enter City Name"> இடைத்தங்கல்<br>

<button onclick="getCityName()"> Submit </button>
<p> </p>
<p> </p>
<p> </p>

</div>
	<script>
		function getCityName()
	{
	cityNamesInput = document.getElementsByTagName("input")
	cityNamesOutput = document.getElementsByTagName("p")
	cityNamesOutput[0].innerHTML =cityNamesInput[0].value
	cityNamesOutput[1].innerHTML =cityNamesInput[1].value
	cityNamesOutput[2].innerHTML =cityNamesInput[2].value
	}
		
	</script>
</body>
</html>

இதைத் தவிர்க்கத் தான், div idஐ scriptக்குள் பயன்படுத்தப் போகிறோம்.  

	<script>
		function getCityName()
	{
       cityDivision = document.getElementById("cities")
	cityNamesInput = cityDivision.getElementsByTagName("input")
	cityNamesOutput = document.getElementsByTagName("p")
	cityNamesOutput[0].innerHTML =cityNamesInput[0].value
	cityNamesOutput[1].innerHTML =cityNamesInput[1].value
	cityNamesOutput[2].innerHTML =cityNamesInput[2].value
	}
		
	</script>


ஜாவாஸ்கிரிப்டைப் பயன்படுத்தி CSS கோப்பை எப்படிக் கையாள்வது? 

index.html: 

<!DOCTYPE html>
<html>
	<head> 
		<script type="text/javascript" src="demo.js"> </script>
    <link rel="stylesheet" href="styles/layout.css"> 
</head>	 
<body>
<h2> Select By Tag Name By ID எடுத்துக்காட்டு</h2>
<input placeHolder="Enter City Name"> இல் இருந்து<br>

<div id = "cities">
<input placeHolder="Enter City Name"> இல் இருந்து<br>
<input placeHolder="Enter City Name"> வரை<br>
<input placeHolder="Enter City Name"> இடைத்தங்கல்<br>

<button onclick="getCityName()"> Submit </button>
<p> </p>
<p> </p>
<p> </p>

</div>
	<script>
		function getCityName()
	{
	cityNamesInput = document.getElementsByTagName("input")
	cityNamesOutput = document.getElementsByTagName("p")
	cityNamesOutput[0].innerHTML =cityNamesInput[0].value
	cityNamesOutput[1].innerHTML =cityNamesInput[1].value
	cityNamesOutput[2].innerHTML =cityNamesInput[2].value
	}
		
	</script>
</body>
</html>


layout.css:
input{width:40%;height:50px;}
h2, p
{
color:blue;
}
button
{
width:40%; 
height:50px; 
background-color: black; 
color: yellow; 
}

demo.js: 
--------
function getCityName()
{
    cityDivision = document.getElementById("cities")
	cityNamesInput = cityDivision.getElementsByTagName("input")
	cityNamesOutput = document.getElementsByTagName("p")
for(i=0;i<cityNamesInput.length;i++)
    {
	cityNamesOutput[i].innerHTML =cityNamesInput[i].value;
    cityNamesOutput[i].style.color = "green";
	}
}

தேவைப்பட்டால்: 
cityNamesOutput[i].style.backgroundColor = "yellow";














